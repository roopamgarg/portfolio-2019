{"version":3,"sources":["logo.svg","components/menu.jsx","components/contact.jsx","components/header.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","menu","_ref","content","setHeader","react_default","a","createElement","className","concat","tilt_default","Object","defineProperty","options","max","style","height","width","padding","onClick","contact","href","class","header","_useState","useState","_useState2","slicedToArray","setcontent","_useState3","_useState4","headerAnimation","setAnimation","display","overflow","App","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2953718b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\n\r\nexport default ({content,setHeader}) => (\r\n  <div className={`menu show-${content}`}>\r\n    <div></div>\r\n    <ul className=\"menu__links\">\r\n        <Tilt className=\"Tilt\"\r\n        options={{ max: 25 }}\r\n        style={{ height: \"100%\", width: \"100%\" }} className=\"menu__link\">Skills</Tilt>\r\n        <Tilt className=\"Tilt\"\r\n        options={{ max: 25 }}\r\n        style={{ height: \"100%\", width: \"100%\" }} className=\"menu__link\">Project</Tilt>\r\n        <Tilt className=\"Tilt\"\r\n        options={{ max: 25 }}\r\n        style={{ height: \"100%\", width: \"100%\" }} className=\"menu__link\">About</Tilt>\r\n        <Tilt className=\"Tilt\"\r\n        options={{ max: 25 }}\r\n        style={{ height: \"100%\", width: \"100%\" }} className=\"menu__link\">Contact</Tilt>\r\n         \r\n    </ul>\r\n  <div  style={{padding:\"1rem\"}} onClick={setHeader}>\r\n    <div className=\"icon back flipped\"></div>\r\n    </div>\r\n   \r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\n\r\nexport default ({content,setHeader}) => (\r\n  <div className={`contact show-${content}`}>\r\n    \r\n    \r\n  <div  style={{padding:\"1rem\"}} onClick={setHeader}>\r\n    <div className=\"icon back\"></div>\r\n    </div>\r\n   <div>\r\n       <div className=\"contact__links\">\r\n\r\n       <a href=\"#\"><i class=\"fab fa-github-square\"></i></a>\r\n       <a href=\"#\"><i class=\"fab fa-linkedin\"></i></a>\r\n       <a href=\"#\"><i class=\"fab fa-instagram\"></i></a>\r\n\r\n       </div>\r\n       <p>You can call me on</p>\r\n       <p className=\"contact__details\">+91 9990-765-727</p>\r\n       <p>or</p>\r\n       <p className=\"contact__details\">SEND MESSAGE</p>\r\n   </div>\r\n\r\n    <div></div>\r\n  </div>\r\n);\r\n","import React, { useState }  from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport Menu from \"./menu\";\r\nimport Contact from './contact'\r\nexport default () =>{\r\n  const [content, setcontent] = useState(\"header\");\r\n  const [headerAnimation, setAnimation] = useState(\"animate-left\");\r\n  const setMenu = () =>{\r\n    setcontent(\"menu\")\r\n  }\r\n  const setHeader = () =>{\r\n    if(content === \"menu\"){\r\n      setAnimation(\"animate-right\")\r\n    }else if(content === \"contact\"){\r\n      setAnimation(\"animate-left\")\r\n    }\r\n    setcontent(\"header\")\r\n  }\r\n  const setContact = () =>{\r\n    setcontent(\"contact\")\r\n  }\r\n  \r\n  return (\r\n    <div style={{display:\"flex\",overflow:\"auto\"}} >\r\n      <Menu content={content} setHeader={setHeader}/>\r\n    <header className={`section-header ${headerAnimation} show-${content}`}>\r\n      <div class=\"header__menu \">\r\n        <p>Menu</p>\r\n        <div className=\"header__menu--yellow\" onClick={setMenu}>\r\n          <p>Menu</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"header\">\r\n        <Tilt\r\n          className=\"Tilt\"\r\n          options={{ max: 25 }}\r\n          style={{ height: \"100%\", width: \"100%\" }}\r\n        >\r\n            <h1 class=\"header__heading\">Roopam Garg</h1>\r\n            <p class=\"header__para\">Web Developer</p>\r\n        </Tilt>\r\n     \r\n     \r\n      </div>\r\n      <div class=\"header__menu right\">\r\n        <p>Menu</p>\r\n        <div className=\"header__menu--blue\" onClick={setContact}>\r\n          <p>Menu</p>\r\n        </div>\r\n      </div>\r\n    </header>\r\n    <Contact content={content} setHeader={setHeader}/>\r\n    </div>\r\n  );\r\n  \r\n} ","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/header'\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <Header/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}